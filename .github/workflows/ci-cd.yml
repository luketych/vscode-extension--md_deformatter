name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      publish_prerelease:
        description: 'Publish as pre-release'
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter
        run: npm run lint --if-present
        
      - name: Run tests
        run: npm test --if-present
        
      - name: Compile extension
        run: npm run compile

  publish:
    needs: test
    runs-on: ubuntu-latest
    # Only run on main branch pushes, tags, or manual trigger
    if: |
      github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) ||
      github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Compile extension
        run: npm run compile
        
      - name: Install vsce
        run: npm install -g @vscode/vsce
        
      - name: Package extension
        run: vsce package
        
      - name: Publish to VSCode Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          # For tagged releases, use the tag as version
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "Publishing version $VERSION from tag"
            vsce publish $VERSION
          elif [[ "${{ github.event.inputs.publish_prerelease }}" == "true" ]]; then
            # For manual pre-release publishing
            echo "Publishing as pre-release"
            vsce publish --pre-release
          else
            # For pushes to main, publish current version from package.json
            echo "Publishing current version from package.json"
            vsce publish
          fi
          
      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension
          path: '*.vsix'